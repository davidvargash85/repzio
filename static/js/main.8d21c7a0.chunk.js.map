{"version":3,"sources":["components/Breadcrumb/Breadcrumb.jsx","services/dataService.js","Pages/ProductPage/ProductPage.jsx","Pages/NotFound/NotFoundPage.jsx","components/Layout/Layout.jsx","components/ProductList/Product/Product.jsx","components/ProductList/ProductList.jsx","components/Image/Image.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","components/Greetings/Greetings.jsx","App.js","serviceWorker.js","index.js"],"names":["Breadcrumb","children","className","Item","dataService","getProducts","callback","data","items","getProductsById","id","a","result","find","p","ProductID","getCompanyInfo","CompanyName","Message","getSalesRepInfo","SalesRep","FirstName","LastName","EmailAddress","Phone","City","State","PostalCode","CellPhone","displayName","withRouter","match","useState","undefined","product","setProduct","useEffect","window","scrollTo","params","ItemName","Description","Dimensions","BasePrice","PhotoName","imageUrl","to","src","alt","toFixed","getProduct","NotFound","Layout","Header","Body","Footer","PropTypes","default","name","price","Product","productUrl","key","ProductList","products","setProducts","map","Image","width","height","loaded","setLoaded","viewBox","fill","style","visibility","onLoad","firstName","setFirstName","lastName","setLastName","email","setEmail","setSalesRepInfo","salesRep","city","setCity","phone","setPhone","cell","setCell","state","setState","Greetings","title","setTitle","message","setMessage","setCompanyInfo","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","App","exact","path","component","ProductPage","NotFoundPage","Boolean","location","hostname","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.8d21c7a0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Breadcumb.css';\r\n\r\nconst Breadcrumb = ({children}) => <ul className=\"breadcrumb\">{children}</ul>\r\nBreadcrumb.Item = ({children}) => <li className=\"breadcrumb__item\">{children}</li> \r\n\r\nexport default Breadcrumb;","import data from \"./data.json\";\r\n\r\nconst dataService = () => {\r\n  const getProducts = callback => {\r\n    const { items } = data;\r\n    callback(items);\r\n  };\r\n\r\n  const getCompanyInfo = callback => {\r\n    const { CompanyName, Message } = data;\r\n    const result = {\r\n      CompanyName,\r\n      Message\r\n    };\r\n    callback(result);\r\n  };\r\n\r\n  const getSalesRepInfo = callback => {\r\n    const { SalesRep } = data;\r\n    const {\r\n      FirstName,\r\n      LastName,\r\n      EmailAddress,\r\n      Phone,\r\n      City,\r\n      State,\r\n      PostalCode,\r\n      CellPhone\r\n    } = SalesRep;\r\n    const result = {\r\n      FirstName,\r\n      LastName,\r\n      EmailAddress,\r\n      Phone,\r\n      CellPhone,\r\n      City,\r\n      State,\r\n      PostalCode\r\n    };\r\n    callback(result);\r\n  };\r\n\r\n  const getProductsById = async (id, callback) => {\r\n    const { items } = data;\r\n    // eslint-disable-next-line\r\n    const result = items && items.find(p => p.ProductID == id);\r\n    callback(result);\r\n  };\r\n\r\n  return {\r\n    getProducts,\r\n    getProductsById,\r\n    getCompanyInfo,\r\n    getSalesRepInfo\r\n  };\r\n};\r\n\r\nexport default dataService();\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Breadcrumb from \"../../components/Breadcrumb/Breadcrumb\";\r\nimport dataService from \"../../services/dataService\";\r\n\r\nimport \"./ProductPage.css\";\r\n\r\nconst displayName = \"product-detail\";\r\n\r\nconst ProductPage = ({ match }) => {\r\n  const [product, setProduct] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const id = match.params.id;\r\n    dataService.getProductsById(id, setProduct);\r\n  }, [match.params.id]);\r\n\r\n  const getUrl = url => `${url}?width=480&height=480`;\r\n\r\n  const getProduct = product => {\r\n    const { ItemName, Description, Dimensions, BasePrice, PhotoName } = product;\r\n    const imageUrl = getUrl(PhotoName);\r\n    return (\r\n      <div>\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item>\r\n            <Link to=\"/repzio/products\">All Products</Link>\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item>{ItemName}</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <section className={displayName}>\r\n          <div className={`product-outer-image min-width`}>\r\n            <div className={`${displayName}__img`}>\r\n              <img src={imageUrl} alt={ItemName} />\r\n            </div>\r\n          </div>\r\n          <div className={`${displayName}__content`}>\r\n            <h1 className={`${displayName}__title`}>{ItemName}</h1>\r\n            <div className={`${displayName}__price`}>{`$${BasePrice.toFixed(\r\n              2\r\n            )}`}</div>\r\n            <div className={`${displayName}__item-number`}>\r\n              <small>{`Item ID: ${match.params.id}`}</small>\r\n            </div>\r\n            <div className={`${displayName}__info`}>{Description}</div>\r\n            <div\r\n              className={`${displayName}__dimensions`}\r\n            >{`Dimensions: ${Dimensions}`}</div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return product ? getProduct(product) : <div>loading ...</div>;\r\n};\r\n\r\nexport default withRouter(ProductPage);\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return <div>Page Not Found</div>\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport \"./Layout.css\";\r\n\r\nconst Layout = ({ children }) => <main className=\"app layout\">{children}</main>\r\nLayout.Header = ({ children }) => <header className=\"app layout__header\">{children}</header>\r\nLayout.Body = ({ children }) => <div className=\"app layout__body\">{children}</div>\r\nLayout.Footer = ({ children }) => <footer className=\"app layout__footer\">{children}</footer>\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./product.css\";\r\n\r\nconst displayName = \"product\";\r\n\r\nconst Product = ({ ItemName, BasePrice, PhotoName, ProductID }) => {\r\n  const imageUrl = `${PhotoName}?width=250&height=250`;\r\n  const productUrl = `/repzio/products/${ProductID}`;\r\n\r\n  return (\r\n    <div className={displayName} key={ProductID}>\r\n      <div className={`${displayName}-outer-image`}>\r\n        <div className={`${displayName}-image`}>\r\n          <Link to={productUrl}>\r\n            <img src={imageUrl} alt={ItemName} />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"product-title\">\r\n        <Link to={productUrl}>{ItemName}</Link>\r\n      </div>\r\n      <div className=\"product-price\">{`$ ${BasePrice.toFixed(2)}`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProduct.propTypes = {\r\n  ItemName: PropTypes.string,\r\n  BasePrice: PropTypes.number,\r\n  PhotoName: PropTypes.string,\r\n  ProductID: PropTypes.number\r\n};\r\n\r\nPropTypes.default = {\r\n  name: \"\",\r\n  price: \"\",\r\n  imageUrl: \"\",\r\n  ProductID: \"\"\r\n};\r\n\r\nexport default Product;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport dataService from \"../../services/dataService\";\r\nimport Product from \"./Product\";\r\n\r\nimport \"./ProductList.css\";\r\n\r\nconst displayName = 'product-list';\r\n\r\nconst ProductList = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dataService.getProducts(setProducts);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={displayName}>\r\n      {products.map(product =><Product { ...product } /> )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Image = ({ src, alt, className, width, height }) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const viewBox = `0 0 ${width} ${height}`;\r\n\r\n  return (\r\n    <div className=\"image\">\r\n      {!loaded ? (\r\n        <svg width={width} height={height} viewBox={viewBox}>\r\n          <rect width={width} height={height} fill=\"#CCC\" />\r\n        </svg>\r\n      ) : null}\r\n      <img\r\n        src={src}\r\n        style={!loaded ? { visibility: \"hidden\" } : {}}\r\n        onLoad={() => setLoaded(true)}\r\n        alt={alt}\r\n        className={className}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dataService from \"../../services/dataService\";\r\nimport Image from \"../Image\";\r\nimport \"./Header.css\";\r\n\r\nconst displayName = \"main-header\";\r\n\r\nconst Header = () => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const setSalesRepInfo = salesRep => {\r\n    const { FirstName, LastName, EmailAddress } = salesRep;\r\n    setFirstName(FirstName);\r\n    setLastName(LastName);\r\n    setEmail(EmailAddress);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataService.getSalesRepInfo(setSalesRepInfo);\r\n  }, []);\r\n\r\n  return (\r\n    <header className={displayName}>\r\n      <div className={`${displayName}-logo`}>\r\n        <Link to=\"/repzio/products\">\r\n          <Image\r\n            src=\"http://images.repzio.com/productimages/772/logo772_lg.jpg?width=60&height=60\"\r\n            alt=\"logo\"\r\n            width={60}\r\n            height={60}\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div\r\n        className={`${displayName}-sales-rep`}\r\n      >{`${firstName} ${lastName} - ${email}`}</div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport dataService from \"../../services/dataService\";\r\nimport './Footer.css';\r\n\r\nconst displayName = 'main-footer';\r\n\r\nconst Footer = () => {\r\n  const [city, setCity] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [cell, setCell] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  \r\n  const setSalesRepInfo = salesRep => {\r\n    const {\r\n      FirstName,\r\n      LastName,\r\n      EmailAddress,\r\n      Phone,\r\n      City,\r\n      State,\r\n      CellPhone\r\n    } = salesRep;\r\n    setCity(City);\r\n    setFirstName(FirstName);\r\n    setLastName(LastName);\r\n    setEmail(EmailAddress);\r\n    setPhone(Phone);\r\n    setCell(CellPhone);\r\n    setState(State);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataService.getSalesRepInfo(setSalesRepInfo);\r\n  }, []);\r\n\r\n  return (\r\n    <footer className={displayName}>\r\n      <div className={`${displayName}-contact-info`}>\r\n        <address className={`${displayName}-v-card`}>\r\n          <div className=\"v-card-name\">{`${firstName} ${lastName}`}</div>\r\n          <div className=\"v-card-separator\" />\r\n          <div className=\"v-card-email\">{email}</div>\r\n          <div className=\"v-card-phone\">{`Phone: ${phone} - Cell: ${cell}`}</div>\r\n          <div className=\"v-card-locality\">{`${city}, ${state}`}</div>\r\n        </address>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\r\nimport dataService from \"../../services/dataService\";\r\nimport DOMPurify from 'dompurify'\r\n\r\nimport './Greetings.css';\r\n\r\nconst displayName = 'greetings';\r\n\r\nconst Greetings = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const setCompanyInfo = ({\r\n    CompanyName,\r\n    Message\r\n  }) => {\r\n    setTitle(CompanyName);\r\n    setMessage(Message);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataService.getCompanyInfo(setCompanyInfo);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"greetings\">\r\n      <header className={`${displayName}-company-name`}>\r\n        <h1>{title}</h1>\r\n      </header>\r\n      <div className={`${displayName}-title-separator`} />\r\n      <div\r\n        className={`${displayName}-message`}\r\n        dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(message) }}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Greetings;\r\n","import React from \"react\";\r\nimport ProductPage from './Pages/ProductPage';\r\nimport NotFoundPage from \"./Pages/NotFound/NotFoundPage\";\r\nimport Layout from \"./components/Layout\";\r\nimport ProductList from \"./components/ProductList\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Greetings from './components/Greetings';\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <Layout.Header>\r\n        <Header />\r\n      </Layout.Header>\r\n      <Layout.Body>\r\n        <Greetings />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ProductList} />\r\n          <Route exact path=\"/repzio\" component={ProductList} />\r\n          <Route path=\"/repzio/products/:id\" component={ProductPage} />\r\n          <Route path=\"/repzio/products/\" component={ProductList} />\r\n          {/* <Route path=\"*\" component={NotFoundPage} /> */}\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </Layout.Body>\r\n      <Layout.Footer>\r\n        <Footer />\r\n      </Layout.Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst app = (\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}